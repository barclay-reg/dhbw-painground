<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
   <modelVersion>4.0.0</modelVersion>
   <groupId>net.kleinschmager.dhbw.tfe16</groupId>
   <artifactId>painground</artifactId>
   <name>DHBW Lessons :: Painground</name>
   <version>0.2.0-SNAPSHOT</version>
   <packaging>war</packaging>

   <properties>
      <maven.compiler.source>1.8</maven.compiler.source>
      <maven.compiler.target>1.8</maven.compiler.target>
      <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
      <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
      <failOnMissingWebXml>false</failOnMissingWebXml>

      <webapp.directory>src/main/webapp</webapp.directory>

      <!-- Dependencies -->
      <vaadin.version>14.6.8</vaadin.version>
      <spring-boot.version>2.3.4.RELEASE</spring-boot.version>
      <!-- use the x.x.x-optout versions, to avoid license-checks -->
      <vaadin-usage-statistics.version>1.0.0-optout</vaadin-usage-statistics.version>
   </properties>

   <pluginRepositories>
      <pluginRepository>
         <id>spring-milestone</id>
         <url>https://repo.spring.io/milestone/</url>
      </pluginRepository>
      <pluginRepository>
         <id>vaadin-prereleases</id>
         <url>https://maven.vaadin.com/vaadin-prereleases</url>
      </pluginRepository>
   </pluginRepositories>

   <repositories>
      <repository>
         <id>vaadin-prereleases</id>
         <url>https://maven.vaadin.com/vaadin-prereleases</url>
      </repository>
      <repository>
         <id>vaadin-addon</id>
         <url>https://maven.vaadin.com/vaadin-addons</url>
      </repository>
      <repository>
         <id>spring-milestone</id>
         <url>https://repo.spring.io/milestone/</url>
      </repository>
   </repositories>

   <dependencyManagement>
      <dependencies>
         <dependency>
            <groupId>com.vaadin</groupId>
            <artifactId>vaadin-bom</artifactId>
            <version>${vaadin.version}</version>
            <type>pom</type>
            <scope>import</scope>
         </dependency>
         <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-dependencies</artifactId>
            <version>${spring-boot.version}</version>
            <type>pom</type>
            <scope>import</scope>
         </dependency>
      </dependencies>
   </dependencyManagement>

   <dependencies>
      <dependency>
         <groupId>com.vaadin</groupId>
         <artifactId>vaadin-core</artifactId>
      </dependency>

      <dependency>
         <groupId>com.vaadin</groupId>
         <artifactId>vaadin-spring-boot-starter</artifactId>
      </dependency>

      <dependency>
         <groupId>org.springframework.boot</groupId>
         <artifactId>spring-boot-starter-data-jpa</artifactId>
      </dependency>

      <dependency>
         <groupId>org.springframework.boot</groupId>
         <artifactId>spring-boot-starter-jooq</artifactId>
      </dependency>

      <dependency>
         <groupId>org.springframework.boot</groupId>
         <artifactId>spring-boot-devtools</artifactId>
         <optional>true</optional>
      </dependency>

      <dependency>
         <groupId>org.webjars.bowergithub.vaadin</groupId>
         <artifactId>vaadin-usage-statistics</artifactId>
         <version>${vaadin-usage-statistics.version}</version>
      </dependency>

      <!-- better slf4j logging -->
      <dependency>
         <groupId>kr.pe.kwonnam.slf4j-lambda</groupId>
         <artifactId>slf4j-lambda-core</artifactId>
         <version>0.1</version>
      </dependency>

      <dependency>
         <groupId>org.liquibase</groupId>
         <artifactId>liquibase-core</artifactId>
      </dependency>

      <dependency>
         <groupId>com.h2database</groupId>
         <artifactId>h2</artifactId>
         <scope>runtime</scope>
      </dependency>

      <!-- utility libraries -->
      <dependency>
         <groupId>com.google.guava</groupId>
         <artifactId>guava</artifactId>
         <version>[24.1.1,)</version>
      </dependency>
      <dependency>
         <groupId>org.apache.commons</groupId>
         <artifactId>commons-lang3</artifactId>
      </dependency>

      <!-- more vaadin (flow) components -->
      <dependency>
         <groupId>com.vaadin</groupId>
         <artifactId>vaadin-board-flow</artifactId>
      </dependency>

      <dependency>
         <groupId>com.vaadin</groupId>
         <artifactId>vaadin-charts-flow</artifactId>
      </dependency>

      <dependency>
         <groupId>com.github.appreciated</groupId>
         <artifactId>app-layout-addon</artifactId>
         <version>2.0.0</version>
      </dependency>

      <!-- testing -->
      <dependency>
         <groupId>org.springframework.boot</groupId>
         <artifactId>spring-boot-starter-test</artifactId>
         <scope>test</scope>
      </dependency>
   </dependencies>

   <build>
      <pluginManagement>
         <plugins>
            <plugin>
               <groupId>org.apache.maven.plugins</groupId>
               <artifactId>maven-war-plugin</artifactId>
               <version>3.1.0</version>
               <configuration>
                  <packagingExcludes>
                     %regex[WEB-INF/lib/slf4j-simple.*.jar],
                     %regex[WEB-INF/lib/tomcat.*.jar]
                  </packagingExcludes>
               </configuration>
            </plugin>
         </plugins>
      </pluginManagement>

      <plugins>
         <plugin>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-maven-plugin</artifactId>
            <version>${spring-boot.version}</version>
         </plugin>

         <plugin>
            <groupId>org.ec4j.maven</groupId>
            <artifactId>editorconfig-maven-plugin</artifactId>
            <version>0.0.5</version>
            <executions>
               <execution>
                  <id>check</id>
                  <phase>verify</phase>
                  <goals>
                     <goal>check</goal>
                  </goals>
               </execution>
            </executions>
         </plugin>
      </plugins>
   </build>

   <profiles>
      <profile>
         <!-- Production mode can be activated with either property or profile -->
         <id>production-mode</id>
         <activation>
            <property>
               <name>vaadin.productionMode</name>
            </property>
         </activation>
         <properties>
            <vaadin.productionMode>true</vaadin.productionMode>
         </properties>


         <dependencies>
            <dependency>
               <groupId>com.vaadin</groupId>
               <artifactId>flow-server-production-mode</artifactId>
            </dependency>
         </dependencies>

         <build>
            <plugins>
               <plugin>
                  <groupId>com.vaadin</groupId>
                  <artifactId>vaadin-maven-plugin</artifactId>
                  <version>${vaadin.version}</version>
                  <executions>
                     <execution>
                        <goals>
                           <goal>copy-production-files</goal>
                           <goal>package-for-production</goal>
                        </goals>
                     </execution>
                  </executions>
               </plugin>
               <plugin>
                  <groupId>org.springframework.boot</groupId>
                  <artifactId>spring-boot-maven-plugin</artifactId>
                  <configuration>
                     <jvmArguments>-Dvaadin.productionMode</jvmArguments>
                  </configuration>
               </plugin>
            </plugins>
         </build>
      </profile>
   </profiles>
</project>
